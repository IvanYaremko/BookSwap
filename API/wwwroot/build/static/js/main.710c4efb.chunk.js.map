{"version":3,"sources":["app/api/agent.ts","app/api/isbnAgent.ts","app/stores/ProfileStore.ts","app/stores/SwapStore.ts","app/stores/UserStore.ts","app/stores/Store.ts","app/stores/BookStore.ts","app/stores/commonStore.ts","app/stores/MessageStore.ts","app/layout/NavBar.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/CustomTextInput.tsx","app/common/form/CustomTextArea.tsx","features/form/BookForm.tsx","features/details/BookDetails.tsx","features/errors/NotFound.tsx","features/form/IsbnForm.tsx","features/auth/LoginForm.tsx","features/auth/RegisterForm.tsx","features/Search/CustomSearch.tsx","features/dashboards/market/BookList.tsx","features/dashboards/market/MarketDashboard.tsx","features/dashboards/swap/SwapList.tsx","features/dashboards/swap/UserRequestList.tsx","features/dashboards/swap/SwapDashboard.tsx","features/dashboards/swap/RequestorBookList.tsx","features/dashboards/history/PastSwapsList.tsx","features/dashboards/history/SwapHistoryDashboard.tsx","features/dashboards/profile/ProfileEditForm.tsx","features/dashboards/profile/ProfileDetails.tsx","features/dashboards/profile/ProfileOwnedBooks.tsx","features/dashboards/profile/Upload/Dropzone.tsx","features/dashboards/profile/Upload/UploadWidget.tsx","features/dashboards/profile/ProfilePhotos.tsx","features/dashboards/profile/ProfileContent.tsx","features/dashboards/profile/ProfileHeader.tsx","features/dashboards/profile/ProfileDashboard.tsx","features/dashboards/history/SwapChat.tsx","features/dashboards/history/SwapHistoryDetails.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","index.tsx"],"names":["sleep","delay","Promise","resolve","setTimeout","axios","interceptors","response","use","a","defaults","baseURL","process","request","config","token","store","commonStore","headers","Authorization","responseBody","data","requests","url","get","then","body","post","text","put","delete","agent","Books","list","listOwned","id","details","create","book","update","Account","current","login","user","register","getUserById","Swaps","listRequested","listMyRequests","listHistory","swap","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","instance","error","status","history","push","isbnAgent","urL","ProfileStore","loadingProfile","isUploading","isMainLoading","loading","loadProfile","runInAction","console","log","photo","photos","isMain","userStore","setImage","image","setMain","find","p","filter","displayName","setDisplayName","makeAutoObservable","this","userName","SwapStore","swapMap","Map","selectedSwap","undefined","requestedMap","requestDetails","myRequestsMap","historyMap","selectedRequestor","sumbittedSwap","editSwap","loadingInitial","loadRequested","forEach","r","set","swapId","loadMyRequests","loadHistory","h","loadSwaps","setLoadingInitial","setSwap","loadRequest","loadSwap","getSwap","createSwap","updateSwap","deleteSwap","clearSelectedSwap","state","UserStore","getUser","values","setToken","logout","window","localStorage","removeItem","bookStore","bookMap","booksOwnedMap","selectedBook","submittingBook","editMode","county","loadBooks","setBook","loadBook","getBook","loadOwnedBooks","createBook","updateBook","deleteBook","setSubmittingBook","isbn","newBook","title","author","authors","synopsys","pages","binding","isbn13","isMarket","appUserId","setCounty","getItem","applicationLoaded","setServerError","setApplicationLoaded","bool","reaction","setItem","swapStore","profileStore","messageStore","messages","hubConnection","createHubConnection","HubConnectionBuilder","withUrl","REACT_APP_API_MESSAGES_URL","accessTokenFactory","skipNegotiation","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","message","createdAt","Date","unshift","stopHubConnection","stop","errro","removeMessages","addMessage","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","name","size","positive","content","position","Image","src","avatar","Dropdown","onClick","icon","Segment","textAlign","vertical","className","style","marginTop","Header","checkLogin","Button","Link","LoadingComponent","Dimmer","active","Loader","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","CustomTextArea","useHistory","useParams","useState","validationSchema","Yup","required","useEffect","clearing","sub","enableReinitialize","initialValues","onSubmit","length","uuid","handleFormSubmit","handleSubmit","isValid","isSubmitting","dirty","autoComplete","centered","rounded","placeholder","rows","disabled","floated","type","Card","fluid","Content","Meta","Description","extra","Array","from","ownerBookID","requesterID","Group","widths","ownerID","requesterBookID","NotFound","Inline","primary","shape","Grid","Column","width","verticalAlign","marginLeft","email","password","countyDefinitions","countyOptions","_","map","index","key","value","handleDropDown","event","bio","search","selection","options","onChange","results","setResults","setValue","Search","onSearchChange","e","target","match","noResultsMessage","resultRenderer","divided","toLowerCase","hidden","Row","defaultValue","compact","relaxed","ownerBook","height","requestor","columns","setRequest","books","myBookToDelete","handleSwap","requestorBook","owner","setEditMode","handleUpdate","isCurrentUser","Tab","Pane","whiteSpace","setTarget","itemsPerRow","currentTarget","handleBookDelete","Dropzone","setFiles","styles","border","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","files","photoMode","setPhotoMode","handleSetMain","handleDelete","panes","menuItem","render","ProfileOwnedBooks","menu","menuPosition","verticleAlign","attached","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","resetForm","onKeyPress","shiftKey","preventDefault","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","LoginForm","RegisterForm","MarketDashboard","BookDetails","BookForm","IsbnForm","ProfileDashboard","RequestorBookList","SwapDashboard","SwapHistoryDashboard","SwapHistoryDetails","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.710c4efb.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { Book } from \"../models/Book\";\r\nimport { BookSwap } from \"../models/BookSwap\";\r\nimport { Photo, Profile } from \"../models/Profile\";\r\nimport { SwapRequests } from \"../models/SwapRequests\";\r\nimport { User, UserBook, UserForm } from \"../models/User\";\r\nimport { store } from \"../stores/Store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep(500);\r\n    return response;\r\n})\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}, text?: string) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Books = {\r\n    list: () => requests.get<Book[]>('/books'),\r\n    listOwned: (id: string) => requests.get<Book[]>(`/books/${id}/owned`),\r\n    details: (id: string) => requests.get<Book>(`/books/${id}`),\r\n    create: (book: Book) => requests.post<void>('/books', book),\r\n    update: (book: Book) => requests.put<void>(`/books/${book.id}`, book),\r\n    delete: (id: string) => requests.del<void>(`/books/${id}`)\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserForm) => requests.post<User>('/account/login', user),\r\n    register: (user: UserForm) => requests.post<User>('/account/register', user),\r\n    getUserById: (id: string) => requests.get<UserBook>(`/account/${id}`)\r\n}\r\n\r\nconst Swaps = {\r\n    list: () => requests.get<BookSwap[]>('/swap'),\r\n    listRequested: (id: string) => requests.get<SwapRequests[]>(`/swap/${id}/rm`),\r\n    listMyRequests: (id: string) => requests.get<SwapRequests[]>(`/swap/${id}/ir`),\r\n    listHistory: (id: string) => requests.get<SwapRequests[]>(`/swap/${id}/history`),\r\n    details: (id: string) => requests.get<BookSwap>(`/swap/${id}`),\r\n    create: (swap: BookSwap) => requests.post<void>('/swap', swap),\r\n    update: (id: string, swap: BookSwap) => requests.put<void>(`/swap/${id}`, swap),\r\n    delete: (id: string) => requests.del<void>(`/swap/${id}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: any) => {\r\n        let formData = new FormData()\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Profile) => requests.put(`/profiles`, profile)\r\n}\r\n\r\nconst agent = {\r\n    Books,\r\n    Account,\r\n    Swaps,\r\n    Profiles\r\n}\r\n/**\r\n * Agent file\r\n */\r\nexport default agent","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { history } from \"../..\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api2.isbndb.com/book\",\r\n    headers: { 'Authorization': '46761_da8695639d322094f5fe34bf7c7b8dae' },\r\n    \r\n})\r\n\r\ninstance.interceptors.response.use(async response => {\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { status } = error.response!\r\n    switch (status) {\r\n        case 404:\r\n            history.push('/not-found')\r\n            break\r\n    }\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data\r\n\r\n\r\nconst requests = {\r\n    get: <T>(urL: string) => instance.get<T>(urL).then(responseBody),\r\n}\r\n\r\nconst isbnAgent = {\r\n    requests\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport default isbnAgent\r\n\r\n\r\n\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null\r\n    loadingProfile = false\r\n    isUploading = false\r\n    isMainLoading = false\r\n    loading = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.userName === this.profile.userName\r\n        }\r\n        return false\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true\r\n        try {\r\n            const profile = await agent.Profiles.get(username)\r\n            runInAction(() => {\r\n                this.profile = profile\r\n                this.loadingProfile = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loadingProfile = false)\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: any) => {\r\n        this.isUploading = true\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file)\r\n            const photo = response.data\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo)\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url)\r\n                        this.profile.image = photo.url\r\n                    }\r\n                }\r\n                this.isUploading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.isUploading = false)\r\n        }\r\n    }\r\n\r\n    setMain = async (photo: Photo) => {\r\n        this.isMainLoading = true\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id)\r\n            store.userStore.setImage(photo.url)\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true\r\n                    this.profile.image = photo.url\r\n                    this.isMainLoading = false\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.isMainLoading = false)\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.isMainLoading = true\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id)\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id)\r\n                    this.isMainLoading = false\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.isMainLoading = false)\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Profile) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile);\r\n                }\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { BookSwap } from \"../models/BookSwap\";\r\nimport { SwapRequests } from \"../models/SwapRequests\";\r\nimport { UserBook } from \"../models/User\";\r\n\r\n\r\n/**\r\n * \r\n */\r\nexport default class SwapStore {\r\n    // Map of all the swaps\r\n    swapMap = new Map<string, BookSwap>()\r\n    selectedSwap: BookSwap | undefined = undefined\r\n\r\n    // Map of all the swaps being requested of the current user\r\n    requestedMap = new Map<string, SwapRequests>()\r\n    requestDetails: SwapRequests | undefined = undefined\r\n    // Map of all the swaps the current user is requesting\r\n    myRequestsMap = new Map<string, SwapRequests>()\r\n    // history of users Swaps\r\n    historyMap = new Map<string, SwapRequests>()\r\n\r\n    selectedRequestor: UserBook | undefined = undefined\r\n    sumbittedSwap!: BookSwap\r\n    editSwap = false\r\n    loading = false\r\n    loadingInitial = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    loadRequested = async (id: string) => {\r\n        this.loading = true\r\n\r\n        try {\r\n            const requestedFromMe = await agent.Swaps.listRequested(id)\r\n            requestedFromMe.forEach(r => {\r\n                this.requestedMap.set(r.swapId, r)\r\n            })\r\n            runInAction(() => this.loading = false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    loadMyRequests = async (id: string) => {\r\n        this.loadingInitial = true\r\n\r\n        try {\r\n            const myRequests = await agent.Swaps.listMyRequests(id)\r\n            myRequests.forEach(r => {\r\n                this.myRequestsMap.set(r.swapId, r)\r\n            })\r\n            runInAction(() => this.loading = false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    loadHistory = async (id: string) => {\r\n        this.loading = true\r\n\r\n        try {\r\n            const history = await agent.Swaps.listHistory(id)\r\n            history.forEach(h => {\r\n                this.historyMap.set(h.swapId, h)\r\n            })\r\n            runInAction(() => this.loading = false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    loadSwaps = async () => {\r\n        this.setLoadingInitial(true)\r\n        try {\r\n            const swaps = await agent.Swaps.list()\r\n            swaps.forEach(swap => {\r\n                this.setSwap(swap)\r\n            })\r\n            runInAction(() => this.setLoadingInitial(false))\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.setLoadingInitial(false))\r\n        }\r\n    }\r\n\r\n    loadRequest = (id: string) => {\r\n        return this.requestedMap.get(id)\r\n    }\r\n\r\n    loadSwap = async (id: string) => {\r\n        let swap = this.getSwap(id)\r\n\r\n        if (swap) {\r\n            this.selectedSwap = swap\r\n            return swap\r\n        } else {\r\n            this.setLoadingInitial(true)\r\n            try {\r\n                swap = await agent.Swaps.details(id)\r\n                this.setSwap(swap)\r\n                runInAction(() => {\r\n                    this.selectedSwap = swap\r\n                })\r\n                this.setLoadingInitial(false)\r\n                return swap\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setLoadingInitial(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    createSwap = async (swap: BookSwap) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Swaps.create(swap)\r\n            runInAction(() => {\r\n                this.swapMap.set(swap.id, swap)\r\n                this.selectedSwap = swap\r\n                this.editSwap = false\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    updateSwap = async (swap: BookSwap) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Swaps.update(swap.id, swap)\r\n            runInAction(() => {\r\n                this.swapMap.set(swap.id, swap)\r\n                this.selectedSwap = swap\r\n                this.editSwap = false\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteSwap = async (id: string) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Swaps.delete(id)\r\n            runInAction(() => {\r\n                this.swapMap.delete(id)\r\n                this.myRequestsMap.delete(id)\r\n                this.requestedMap.delete(id)\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    clearSelectedSwap = () => {\r\n        this.selectedSwap = undefined\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state\r\n    }\r\n\r\n    private setSwap = (swap: BookSwap) => {\r\n        this.swapMap.set(swap.id!, swap)\r\n    }\r\n\r\n    setRequestDetails(request: SwapRequests) {\r\n        this.requestDetails! = request\r\n    }\r\n\r\n    getSwap = (id: string) => {\r\n        return this.swapMap.get(id)\r\n    }\r\n\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { User, UserForm } from \"../models/User\";\r\nimport { store } from \"./Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class UserStore {\r\n    user: User | null = null\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get checkLogin() {\r\n        return !!this.user\r\n    }\r\n\r\n    getUser = async () => {\r\n        if (this.user) return this.user\r\n        \r\n        try {\r\n            const user = await agent.Account.current()\r\n            runInAction(() => this.user = user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    getUserById = async (id: string) => {\r\n        try {\r\n            const user = await agent.Account.getUserById(id)\r\n            return user\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    login = async (values: UserForm) => {\r\n        try {\r\n            const user = await agent.Account.login(values)\r\n            store.commonStore.setToken(user.token!)\r\n            runInAction(() => this.user = user)\r\n            history.push('/books')\r\n        } catch (error) {\r\n            console.log(error)\r\n            throw error\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null)\r\n        window.localStorage.removeItem('jwt')\r\n        this.user = null\r\n        history.push('/')\r\n    }\r\n\r\n    register = async (values: UserForm) => {\r\n        try {\r\n            const user = await agent.Account.register(values)\r\n            store.commonStore.setToken(user.token!)\r\n            runInAction(() => this.user = user)\r\n            history.push('/books')\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) {\r\n            this.user.image = image\r\n        }\r\n    }\r\n\r\n    setDisplayName = (profile: Profile) => {\r\n        if (this.user) {\r\n            this.user.displayName = profile.displayName\r\n        }\r\n    }\r\n\r\n}","import { createContext, useContext } from \"react\";\r\nimport BookStore from \"./BookStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport MessageStore from \"./MessageStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport SwapStore from \"./SwapStore\";\r\nimport UserStore from \"./UserStore\";\r\n\r\n/**\r\n * \r\n */\r\ninterface Store {\r\n    bookStore: BookStore\r\n    commonStore: CommonStore\r\n    userStore: UserStore\r\n    swapStore: SwapStore\r\n    profileStore: ProfileStore\r\n    messageStore: MessageStore\r\n}\r\n\r\nexport const store : Store = {\r\n    bookStore: new BookStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    swapStore: new SwapStore(),\r\n    profileStore: new ProfileStore(),\r\n    messageStore: new MessageStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store)\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext)\r\n}","import { makeAutoObservable, runInAction } from \"mobx\"\r\nimport agent from \"../api/agent\"\r\nimport isbnAgent from \"../api/isbnAgent\"\r\nimport { Book } from \"../models/Book\"\r\nimport { IsbnBook } from \"../models/IsbnBook\"\r\nimport { store } from \"./Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class BookStore {\r\n    bookMap = new Map<string, Book>()\r\n    booksOwnedMap = new Map<String, Book>()\r\n    selectedBook: Book | undefined = undefined\r\n    submittingBook!: Book\r\n    editMode = false\r\n    loading = false\r\n    loadingInitial = false\r\n    county: string | undefined = undefined\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    loadBooks = async () => {\r\n        this.setLoadingInitial(true)\r\n        try {\r\n            const books = await agent.Books.list()\r\n            books.forEach(book => {\r\n                this.setBook(book)\r\n            })\r\n          \r\n            this.setLoadingInitial(false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setLoadingInitial(false)\r\n        }\r\n    }\r\n\r\n    loadBook = async (id: string) => {\r\n        let book = this.getBook(id)\r\n\r\n        if (book) {\r\n            this.selectedBook = book\r\n            return book\r\n        } else {\r\n            this.setLoadingInitial(true)\r\n            try {\r\n                book = await agent.Books.details(id)\r\n                runInAction(() => {\r\n                    this.selectedBook = book\r\n                })\r\n                this.setLoadingInitial(false)\r\n                return book\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setLoadingInitial(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    loadOwnedBooks = async (id: string) => {\r\n        this.loading = true\r\n\r\n        try {\r\n            const ownedBooks = await agent.Books.listOwned(id)\r\n            ownedBooks.forEach(book => {\r\n                this.booksOwnedMap.set(book.id!, book)\r\n            })\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n           \r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n\r\n    private setBook = (book: Book) => {\r\n        this.bookMap.set(book.id!, book)\r\n    }\r\n\r\n    getBook = (id: string) => {\r\n        return this.bookMap.get(id)\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state\r\n    }\r\n\r\n    createBook = async (book: Book) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Books.create(book)\r\n            runInAction(() => {\r\n                this.bookMap.set(book.id, book)\r\n                this.selectedBook = book\r\n                this.editMode = false\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    updateBook = async (book: Book) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Books.update(book)\r\n            runInAction(() => {\r\n                this.bookMap.set(book.id, book)\r\n                this.selectedBook = book\r\n                this.editMode = false\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteBook = async (id: string) => {\r\n        this.loading = true\r\n        try {\r\n            await agent.Books.delete(id)\r\n            runInAction(() => {\r\n                this.bookMap.delete(id)\r\n                this.booksOwnedMap.delete(id)\r\n                this.loading = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    setSubmittingBook = async (isbn: string) => {\r\n        this.loading = true\r\n        try {\r\n            await isbnAgent.requests.get<IsbnBook>(isbn).then(response => {\r\n                const {book} = response\r\n                let newBook: Book = {\r\n                    id: \"\",\r\n                    title: book.title,\r\n                    author: book.authors[0],\r\n                    synopsys: book.synopsys,\r\n                    pages: book.pages,\r\n                    binding: book.binding,\r\n                    isbn13: book.isbn13,\r\n                    image: book.image,\r\n                    county: \"carlow\",\r\n                    isMarket: true,\r\n                    appUserId: store.userStore.user!.id\r\n                }\r\n                runInAction(() => {\r\n                    this.submittingBook = newBook\r\n                    this.loading = false\r\n                })\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loading = false\r\n            })\r\n        }\r\n    }\r\n\r\n    setCounty = (county: string) => {\r\n        this.county = county\r\n    }\r\n\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerErrorr\";\r\n/**\r\n * \r\n */\r\nexport default class CommonStore{\r\n    error: ServerError | null = null\r\n    token: string | null = window.localStorage.getItem('jwt')\r\n    applicationLoaded: Boolean = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(() => this.token, token => {\r\n            if (token) {\r\n                window.localStorage.setItem('jwt', token)\r\n            } else {\r\n                window.localStorage.removeItem('jwt')\r\n            }\r\n        })\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token\r\n    }\r\n\r\n    setApplicationLoaded = (bool: Boolean) => {\r\n        this.applicationLoaded = bool\r\n    }\r\n}","import { Message } from \"../models/Message\";\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { store } from \"./Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class MessageStore {\r\n    messages: Message[] = []\r\n    hubConnection: HubConnection | null = null\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (swapId: string) => {\r\n        if (store.swapStore.selectedSwap) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_API_MESSAGES_URL + '?swapId=' + swapId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!,\r\n                    skipNegotiation: true\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build()\r\n            \r\n            this.hubConnection.start().then(() => console.log(\"connection started\")).catch(error => console.log(\"error starting hub \", error))\r\n\r\n            this.hubConnection.on(\"LoadMessages\", (messages: Message[]) => {\r\n                runInAction(() => {\r\n                    messages.forEach(message => {\r\n                        message.createdAt = new Date(message.createdAt + 'Z');\r\n                    })\r\n                    this.messages = messages\r\n                })\r\n               \r\n            })\r\n\r\n            this.hubConnection.on(\"ReceiveMessage\", (message: Message) => {\r\n                runInAction(() => {\r\n                    message.createdAt = new Date(message.createdAt)\r\n                    this.messages.unshift(message)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(errro => console.log(\"Error stopping hub\", errro))\r\n    }\r\n\r\n    removeMessages = () => {\r\n        this.messages = []\r\n        this.stopHubConnection()\r\n    }\r\n\r\n    addMessage = async (values: any) => {\r\n        values.swapId = store.swapStore.selectedSwap?.id\r\n\r\n        try {\r\n            await this.hubConnection?.invoke('SendMessage', values)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {  NavLink } from \"react-router-dom\";\r\nimport {  Container, Dropdown, Icon, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/Store\";\r\n\r\n/**\r\n * NavBar \r\n */\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout } } = useStore()\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <Icon name='book' size=\"large\" />\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/books' name=\"Market\" />\r\n                <Menu.Item name=\"My Swaps\" as={NavLink} to='/swaps'/>\r\n                <Menu.Item as={NavLink} to='/createBook' positive content='Add book' /> \r\n                <Menu.Item as={NavLink} to='/history' positive content='History' /> \r\n                <Menu.Item as={NavLink} to={`/profile/${user?.userName}`} positive content='Profile' /> \r\n                <Menu.Item position=\"right\">\r\n                    {user?.image ? ( <Image src={user?.image } avatar/>) : (<Icon name=\"user\"/>)}\r\n                   \r\n                    <Dropdown text={user?.userName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={logout} text='logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function HomePage() {\r\n    const { userStore } = useStore()\r\n    return (\r\n        <Segment textAlign=\"center\" vertical className=\"home\" style={{ marginTop: \"250px\" }}>\r\n            <Container text>\r\n                <Header as=\"h1\" content=\"BookSwap\" >\r\n\r\n                </Header>\r\n                {userStore.checkLogin ? (\r\n                    <>\r\n                        <Button as={Link} to='/books' size='medium'>Go to BookSwap</Button>\r\n                    </>\r\n                ) : (\r\n\r\n                    <>\r\n                        <Button\r\n                            size='medium'\r\n                            as={Link} to='/login'\r\n                            positive\r\n                        >\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Button\r\n                            size='medium'\r\n                            as={Link} to='/register'\r\n                            positive\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    inverted?: boolean\r\n    content?: string\r\n}\r\n\r\n/**\r\n * Simple loading component\r\n * @param param0 \r\n * @returns \r\n */\r\nexport default function LoadingComponent({ inverted = true, content = 'loading...' }: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}> \r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    label?: string;\r\n    type?: string;\r\n}\r\n/**\r\n * Custom text input to check if input field has been touched or has error\r\n * @param props \r\n * @returns \r\n */\r\nexport default function CustomTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n/**\r\n * Custom textarea to check if input field has been touched or has error\r\n * @param props \r\n * @returns \r\n */\r\nexport default function CustomTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { v4 as uuid } from 'uuid'\r\nimport { Formik, Form } from \"formik\";\r\nimport { Book } from \"../../app/models/Book\";\r\nimport * as Yup from 'yup';\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport CustomTextArea from \"../../app/common/form/CustomTextArea\";\r\n\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function BookForm() {\r\n    const history = useHistory()\r\n    const { bookStore, userStore } = useStore()\r\n    const {user} = userStore\r\n    const { createBook, updateBook, loading, loadBook, loadingInitial, submittingBook } = bookStore\r\n    const { id } = useParams<{ id: string }>()\r\n    const [book, setBook] = useState<Book>({\r\n        id: \"\",\r\n        title: \"\",\r\n        author: \"\",\r\n        synopsys: \"n/a\",\r\n        pages: 0,\r\n        binding: \"n/a\",\r\n        isbn13: \"\",\r\n        image: \"\",\r\n        county: user!.county,\r\n        isMarket: true,\r\n        appUserId: \"\"\r\n    })\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required(),\r\n        author: Yup.string().required(),\r\n        synopsys: Yup.string().required(),\r\n        pages: Yup.number().required(),\r\n        binding: Yup.string().required(),\r\n        isbn13: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            loadBook(id).then(book => setBook(book!))\r\n        } else {\r\n            setBook({...submittingBook})\r\n        }\r\n    }, [id, loadBook, submittingBook])\r\n\r\n    function handleFormSubmit(book: Book) {\r\n        if (book.id!.length === 0) {\r\n            let newBook = {\r\n                ...book,\r\n                id: uuid(),\r\n                appUserId: user!.id\r\n            }\r\n            createBook(newBook).then(() => history.push(\"/books\"))\r\n        } else {\r\n            updateBook(book).then(() => history.push(\"/books\"))\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial || loading) return <LoadingComponent content=\"Loading book...\" />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Book Details' sub color=\"teal\"/>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={book}\r\n                onSubmit={values => handleFormSubmit(values)}\r\n                validationSchema={validationSchema}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\r\n                        <Image\r\n                            centered\r\n                            src={book.image}\r\n                            size=\"small\"\r\n                            rounded\r\n                            placeholder='Image'\r\n                            name='image' />\r\n                        <CustomTextInput name='title' placeholder=\"Title\" />\r\n                        <CustomTextInput placeholder='Author' name='author' />\r\n                        <CustomTextArea rows={3} placeholder='Synopsys' name='synopsys' />\r\n                        <CustomTextInput placeholder='Pages' name='pages' />\r\n                        <CustomTextInput placeholder='Binding' name='binding' />\r\n                        <CustomTextInput placeholder='isbn13' name='isbn13' />\r\n                      \r\n                        <Button\r\n                            disabled={isSubmitting || !isValid}\r\n                            loading={loading}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='submit' />\r\n                        <Button as={Link} to={`/profile/${user?.id}`} floated='right' type='button' content='cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { BookSwap } from \"../../app/models/BookSwap\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { v4 as uuid } from 'uuid'\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function BookDetails() {\r\n    const history = useHistory()\r\n    const { bookStore, userStore, swapStore } = useStore()\r\n    const { selectedBook: book, loadBook, loadingInitial } = bookStore\r\n    const { user } = userStore\r\n    const { createSwap, swapMap} = swapStore\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    useEffect(() => {\r\n        if (id) loadBook(id)\r\n    }, [id, loadBook ])\r\n\r\n    function handleSwapRequest() {\r\n        let swap: BookSwap = {\r\n            id: uuid(),\r\n            ownerID: book!.appUserId,\r\n            ownerBookID: book!.id,\r\n            requesterID: user!.id,\r\n            requesterBookID: \"\",\r\n            status: \"request\"\r\n        }\r\n        console.log(swap)\r\n        createSwap(swap).then(() => history.push(\"/books\"))\r\n    }\r\n\r\n    if (loadingInitial || !book) return <LoadingComponent />\r\n    return (\r\n        <Card fluid>\r\n            <Image src={book.image} size=\"small\" centered />\r\n            <Card.Content>\r\n                <Card.Header>{book.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{book.binding}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    <h4>{book.author}</h4>\r\n                </Card.Description>\r\n                <Card.Description>\r\n                    {book.synopsys}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                {console.log(swapMap.get(\"dcd0e50c-2c73-44dd-ba33-a3a406dbf5e1\"))}\r\n                {console.log(Array.from(swapMap.values()).filter(swap => swap.ownerBookID === book.id && swap.requesterID === user?.id).length)}\r\n                {Array.from(swapMap.values()).filter(swap => swap.ownerBookID === book.id && swap.requesterID === user?.id).length >= 1\r\n                    ?\r\n                    <Button.Group widths='2'>\r\n                        <Button size=\"tiny\" as={Link} to={`/books`} color='red' content='Already requested'/>\r\n                    </Button.Group>\r\n                    :\r\n                    <Button.Group widths='2'>\r\n                        <Button size=\"tiny\" as={Link} to={`/books`} color='green' content='Request swap' onClick={handleSwapRequest} />\r\n                    </Button.Group>\r\n                }\r\n            </Card.Content>\r\n        </Card>\r\n\r\n    )\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n/**\r\n * \r\n */\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Could not find \r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/books' primary>\r\n                    return to books page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function IsbnForm() {\r\n    const isbn = { isbn: \"\" }\r\n    const history = useHistory()\r\n\r\n    const { bookStore } = useStore()\r\n    let { setSubmittingBook, loading } = bookStore\r\n\r\n    function handleSubmit(values: any) {\r\n        setSubmittingBook(values['isbn'])\r\n        history.push('/edit')\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        isbn: Yup.string().required()\r\n    })\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={isbn}\r\n                onSubmit={(values) => handleSubmit(values)}\r\n                validationSchema={validationSchema}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty, values }) => (\r\n                    <Form\r\n                        className=\"ui form\"\r\n                        onSubmit={handleSubmit}\r\n                        autoComplete='off'>\r\n                        <CustomTextInput placeholder='isbn' name='isbn' />\r\n                        <Button\r\n                            disabled={isSubmitting || !isValid || !dirty }\r\n                            loading={loading}\r\n                            type='submit'\r\n                            positive\r\n                            content='get book details'\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function LoginForm() {\r\n    const { userStore } = useStore()\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={8} verticalAlign=\"middle\" style={{marginTop: \"200px\", marginLeft: \"450px\"}}>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '', error: null }}\r\n                    onSubmit={(values) => userStore.login(values)}\r\n                >\r\n\r\n                    {({ handleSubmit, isSubmitting }) => (\r\n                        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <Header as='h2' content='Login to BookSwap' color=\"teal\" textAlign=\"center\" />\r\n                            <CustomTextInput name='email' placeholder=\"Email\" />\r\n                            <CustomTextInput name='password' placeholder=\"Password\" type=\"password\" />\r\n\r\n                            <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                        </Form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React, { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport _ from 'lodash'\r\nimport { Button, Dropdown, Grid, Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { UserForm } from \"../../app/models/User\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore()\r\n    const [county, setCounty] = useState(\"\")\r\n\r\n    const countyDefinitions = [\"Antrim\", \"Armagh\", \"Carlow\", \"Cavan\", \"Clare\", \"Cork\", \"Derry\", \"Donegal\", \"Down\", \"Dublin\",\r\n        \"Fermanagh\", \"Galway\", \"Kerry\", \"Kildare\", \"Kilkenny\", \"Laois\", \"Leitrim\", \"Limerick\", \"Longford\", \"Louth\", \"Mayo\", \"Meath\",\r\n        \"Monaghan\", \"Offaly\", \"Roscommon\", \"Sligo\", \"Tipperary\", \"Tyrone\", \"Waterford\", \"Westmeath\", \"Wexford\", \"Wicklow\",]\r\n\r\n    const countyOptions = _.map(countyDefinitions, (county, index) => ({\r\n        key: countyDefinitions[index],\r\n        text: county,\r\n        value: countyDefinitions[index],\r\n    }))\r\n\r\n    function handleDropDown(event: any, data: any) {\r\n        setCounty(data.value)\r\n    }\r\n\r\n    function handleFormSubmit(user: UserForm) {\r\n        user.county = county\r\n        userStore.register(user)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={8} verticalAlign=\"middle\" style={{marginTop: \"200px\", marginLeft: \"450px\"}}>\r\n                <Formik\r\n                    initialValues={{ displayName: '', userName: '', bio: '', email: '', password: '', error: null }}\r\n                    onSubmit={(values) => handleFormSubmit(values)}\r\n\r\n                >\r\n\r\n                    {({ handleSubmit, isSubmitting }) => (\r\n                        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <Header as='h2' content='Register to BookSwap' color=\"teal\" textAlign=\"center\" />\r\n                            <CustomTextInput name='displayName' placeholder=\"Display Name\" />\r\n                            <CustomTextInput name='userName' placeholder=\"Username\" />\r\n                            <CustomTextInput name='bio' placeholder=\"Bio\" />\r\n                            <Dropdown name='county' placeholder=\"County\" search selection options={countyOptions} onChange={handleDropDown} />\r\n                            <CustomTextInput name='email' placeholder=\"Email\" />\r\n                            <CustomTextInput name='password' placeholder=\"Password\" type=\"password\" />\r\n\r\n\r\n                            <Button loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                        </Form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useState } from 'react';\r\nimport { Item, Search } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { Book } from \"../../app/models/Book\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function CustomSearch() {\r\n    const [results, setResults] = useState<Book[]>()\r\n    const [value, setValue] = useState('');\r\n    const { bookStore } = useStore()\r\n    const { bookMap } = bookStore\r\n\r\n    const resultRenderer = () => (\r\n        <>\r\n            <Item.Group divided>\r\n                <Item>\r\n                    <Item.Image\r\n                        size='tiny'\r\n                        src={results![0].image}\r\n                        as={Link} to={`/books/${results![0].id}`}\r\n                    />\r\n                     <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as={Link} to={`/books/${results![0].id}`} >{results![0].title}</Item.Header>\r\n                                <Item.Content> {results![0].author} </Item.Content>\r\n                            </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        </>\r\n\r\n    )\r\n\r\n    const handleSearchChange = (e: any) => {\r\n        let value = e.target.value;\r\n        setValue(value);\r\n        var match = Array.from(bookMap.values()).filter(book => book.title === value)\r\n\r\n        setResults(match);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Search\r\n                onSearchChange={handleSearchChange}\r\n                noResultsMessage=\"No book found.\"\r\n                resultRenderer={resultRenderer}\r\n                results={results}\r\n                value={value}\r\n            />\r\n        </>\r\n    )\r\n})\r\n\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n\r\n/**\r\n * Component to render books for the marketplace\r\n */\r\nexport default observer(function BookList() {\r\n    const { bookStore, userStore } = useStore()\r\n    const { bookMap, county } = bookStore\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Segment>\r\n                <Item.Group divided>\r\n                    {/* Convert Map to array and filter for county and filter for user owned books */}\r\n                    {Array.from(bookMap.values()).filter(book => book.county.toLowerCase() === county?.toLowerCase() && book.appUserId !== userStore.user?.id).map(book => (\r\n                        <Item key={book.id}>\r\n                            <Item.Image\r\n                                size='tiny'\r\n                                src={book.image}\r\n                                as={Link} to={`/books/${book.id}`} \r\n                            />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as={Link} to={`/books/${book.id}`} >{book.title}</Item.Header>\r\n                                <Item.Content> {book.author} </Item.Content>\r\n                            </Item.Content>\r\n                       \r\n                            <Item.Meta hidden>{book.isbn13}</Item.Meta>\r\n                        </Item>\r\n                    ))}\r\n\r\n                </Item.Group>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import _ from \"lodash\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Dropdown, Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport CustomSearch from \"../../Search/CustomSearch\";\r\nimport BookList from \"./BookList\";\r\n/**\r\n * \r\n */\r\nexport default observer(function MarketDashboard() {\r\n    const { bookStore, userStore, swapStore } = useStore()\r\n    const { loadBooks, bookMap, county, setCounty } = bookStore\r\n    const { user } = userStore\r\n    const {loadSwaps, swapMap} = swapStore\r\n\r\n    const countyDefinitions = [\"Antrim\", \"Armagh\", \"Carlow\", \"Cavan\", \"Clare\", \"Cork\", \"Derry\", \"Donegal\", \"Down\", \"Dublin\",\r\n        \"Fermanagh\", \"Galway\", \"Kerry\", \"Kildare\", \"Kilkenny\", \"Laois\", \"Leitrim\", \"Limerick\", \"Longford\", \"Louth\", \"Mayo\", \"Meath\",\r\n        \"Monaghan\", \"Offaly\", \"Roscommon\", \"Sligo\", \"Tipperary\", \"Tyrone\", \"Waterford\", \"Westmeath\", \"Wexford\", \"Wicklow\",]\r\n\r\n    const countyOptions = _.map(countyDefinitions, (county, index) => ({\r\n        key: countyDefinitions[index],\r\n        text: county,\r\n        value: countyDefinitions[index],\r\n    }))\r\n\r\n    function handleDropDown(event:any, data:any) {\r\n        setCounty(data.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBooks()\r\n        // if (swapMap.size <= 1) loadSwaps()\r\n        if (county === undefined) setCounty(user?.county!)\r\n    }, [bookMap.size, loadBooks, county, setCounty, user?.county, swapMap.size, swapMap, loadSwaps])\r\n\r\n\r\n\r\n\r\n    if (bookStore.loadingInitial) return <LoadingComponent content='Loading Books' />\r\n\r\n    return (\r\n        <>\r\n            <Grid centered>\r\n                <Grid.Column width='10' >\r\n                    <Grid.Row>\r\n                        <CustomSearch />\r\n                    </Grid.Row>\r\n                    <Dropdown name='county' placeholder=\"County\" search selection options={countyOptions} onChange={handleDropDown} defaultValue={county}/>\r\n                    <BookList />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Item, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function SwapList() {\r\n    const { swapStore } = useStore()\r\n    const { myRequestsMap, deleteSwap } = swapStore\r\n\r\n\r\n\r\n    function handleCancle(swapId: string) {\r\n        deleteSwap(swapId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {myRequestsMap.size === 0 ? (\r\n                <h2>No requests made</h2>\r\n            ) : (\r\n                <Segment compact>\r\n                    <Item.Group divided relaxed>\r\n                        {Array.from(myRequestsMap.values()).map(request => (\r\n\r\n                            <Item key={request.swapId}>\r\n                                <Item.Image\r\n                                    size='tiny'\r\n                                    src={request.ownerBook.image}\r\n                                />\r\n                                <Item.Content verticalAlign='middle'>\r\n                                    <Item.Header >{request.ownerBook.title}</Item.Header>\r\n                                    <Item.Content> {request.ownerBook.author} </Item.Content>\r\n                                </Item.Content>\r\n                                <Item.Meta hidden>{request.ownerBook.isbn13}</Item.Meta>\r\n                                <Button\r\n                                    content=\"cancel\"\r\n                                    size=\"tiny\"\r\n                                    style={{ height: '50px', width: '70px', marginTop: '75px' }}\r\n                                    color='red'\r\n                                    onClick={() => handleCancle(request.swapId)} />\r\n                            </Item>\r\n                        ))}\r\n                    </Item.Group>\r\n                </Segment>\r\n            )}\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Item, Grid, Icon, Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function UserRequestList() {\r\n    const { swapStore } = useStore()\r\n    const { requestedMap } = swapStore\r\n\r\n\r\n    return (\r\n        <>\r\n            {requestedMap.size === 0 ? (\r\n                <h2>No swaps</h2>\r\n            ) : (\r\n                <Segment >\r\n                    <Item.Group divided>\r\n                        {Array.from(requestedMap.values()).map(request => (\r\n                            <Item key={request.swapId}>\r\n                                <Item.Content style={{marginLeft: \"25px\"}}>\r\n                                    {request.requestor.photos.length === 0 ? (\r\n                                        <Icon name=\"user\" size=\"big\" />\r\n                                    ) : (\r\n                                        <Image src={request.requestor.photos.find(image => image.isMain)?.url} size=\"tiny\" />\r\n                                    )}\r\n                                    <Grid.Column width={1} />\r\n                                    <Item.Header>{request.requestor!.userName}</Item.Header>\r\n                                    <Grid.Column width={1} />\r\n                                    <Item.Content> {request.requestor!.county} </Item.Content>\r\n                                </Item.Content>\r\n\r\n                                <Item.Content>\r\n                                    <Link to={`/requestor/${request.swapId}`}>\r\n                                        <Icon name=\"arrows alternate horizontal\" size=\"huge\" style={{ marginTop: \"35px\", marginLeft: \"25px\" }} />\r\n                                    </Link>\r\n                                </Item.Content>\r\n\r\n                                <Item.Content>\r\n                                    <Item.Image src={request.ownerBook.image} size=\"tiny\" />\r\n                                </Item.Content>\r\n                            </Item>\r\n                        ))}\r\n\r\n                    </Item.Group>\r\n                </Segment>\r\n            )}\r\n        </>\r\n    )\r\n})","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport SwapList from \"./SwapList\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport UserRequestList from \"./UserRequestList\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function SwapDashboard() {\r\n    const { swapStore, bookStore, userStore } = useStore()\r\n    const { loadSwaps, loadRequested, loadMyRequests, loading, loadingInitial, myRequestsMap, requestedMap } = swapStore\r\n    const { loadBooks} = bookStore\r\n\r\n    useEffect(() => {\r\n        loadBooks()\r\n        loadSwaps()\r\n        loadRequested(userStore.user!.id)\r\n        loadMyRequests(userStore.user!.id)\r\n        console.log(\"my requests \", requestedMap)\r\n    }, [loadBooks, loadSwaps, loadRequested, loadMyRequests, userStore.user])\r\n\r\n\r\n\r\n\r\n    if (loadingInitial || loading) return <LoadingComponent content='Loading Swaps' />\r\n    return (\r\n        <>\r\n            \r\n            <Grid centered columns={2}>\r\n                <Grid.Column >\r\n                    <h1>My requests</h1>\r\n                    <Grid.Row width={1}/>\r\n                    <SwapList />\r\n\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                    <h1>Swap requests</h1>\r\n                    <UserRequestList />\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Button, Grid, Item, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { Book } from \"../../../app/models/Book\";\r\nimport { SwapRequests } from \"../../../app/models/SwapRequests\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function RequestorBookList() {\r\n    const history = useHistory()\r\n    const { swapStore, bookStore } = useStore()\r\n    const { loadRequest, updateSwap, deleteSwap, loadSwap, selectedSwap, loading } = swapStore\r\n    const { deleteBook } = bookStore\r\n    const { id } = useParams<{ id: string }>()\r\n    const [request, setRequest] = useState<SwapRequests>()\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            let request = loadRequest(id)\r\n            setRequest(request)\r\n            loadSwap(id)\r\n        }\r\n    }, [id, loadRequest, loadSwap])\r\n\r\n    function handleSwap(book: Book) {\r\n        selectedSwap!.status = \"confirmed\"\r\n        selectedSwap!.requesterBookID = book.id\r\n        let myBookToDelete = request?.ownerBook\r\n\r\n        deleteBook(myBookToDelete?.id!)\r\n        deleteBook(book.id)\r\n        updateSwap(selectedSwap!).then(() => history.push('/books'))\r\n    }\r\n\r\n    function handleDelete() {\r\n        deleteSwap(id).then(() => history.push('/swaps'))\r\n    }\r\n\r\n\r\n    if (request === undefined) return <LoadingComponent content=\"Loading users books...\" />\r\n\r\n    return (\r\n        <>\r\n            {console.log(request)}\r\n            <Grid centered>\r\n                <Grid.Row>\r\n                    <h1>{request!.requestor.userName} book's</h1>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Segment>\r\n                        <Item.Group divided>\r\n                            {request!.requestor.books?.map(book => (\r\n                                <Item key={book.id}>\r\n                                    <Item.Image\r\n                                        size='tiny'\r\n                                        src={book.image}\r\n                                        to={`/books/${book.id}`}\r\n                                    />\r\n                                    <Item.Content verticalAlign='middle'>\r\n                                        <Item.Header>{book.title}</Item.Header>\r\n                                        <Item.Content> {book.author} </Item.Content>\r\n                                    </Item.Content>\r\n                                    <Grid.Column>\r\n                                        <Button content=\"swap\" style={{ marginTop: '75px' }} color='blue' onClick={() => handleSwap(book)} loading={loading} />\r\n                                    </Grid.Column>\r\n                                </Item>\r\n                            ))}\r\n                        </Item.Group>\r\n\r\n                    </Segment>\r\n\r\n                </Grid.Row>\r\n                <Button content=\"Decline swap\" color=\"red\" onClick={handleDelete} />\r\n            </Grid>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Grid, Icon, Image, Item, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function PastSwapsList() {\r\n    const { swapStore, userStore } = useStore()\r\n    const { historyMap } = swapStore\r\n\r\n    return (\r\n        <>\r\n            <h1>Swap History</h1>\r\n            <Segment compact>\r\n                <Item.Group divided relaxed>\r\n                    {Array.from(historyMap.values()).map(swap => (\r\n                        <Item key={swap.swapId}>\r\n\r\n                            <Grid.Column>\r\n                                <Grid.Row>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Item.Image src={swap.ownerBook!.image} size=\"tiny\" />\r\n                                </Grid.Row>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Link to={`/history/${swap.swapId}`}>\r\n                                    <Icon name=\"arrows alternate horizontal\" style={{ marginLeft: \"25px\", marginTop: \"40px\" }} size=\"huge\" />\r\n\r\n                                </Link>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ marginLeft: \"25px\" }}>\r\n                                <Grid.Row>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Item.Image src={swap.requestorBook!.image} size=\"tiny\" />\r\n                                </Grid.Row>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ marginLeft: \"25px\" }}>\r\n                                <Grid.Row>\r\n                                    <Item.Content><b>Member</b></Item.Content>\r\n                                </Grid.Row>\r\n                                <Grid.Row >\r\n                                    <Item.Content>\r\n                                        {swap.owner.userName === userStore.user?.userName ? (swap.requestor.userName) : (swap.owner.userName)}\r\n                                    </Item.Content>\r\n                                    {swap.owner.userName === userStore.user?.userName ? (\r\n                                        <Image src={swap.requestor.photos.find(image => image.isMain)?.url} size=\"tiny\" />\r\n                                    ) : (\r\n                                        <Image src={swap.owner.photos.find(image => image.isMain)?.url} size=\"tiny\" />\r\n                                    )}\r\n                                    <Item.Content>{swap.requestor.county}</Item.Content>\r\n                                </Grid.Row>\r\n                            </Grid.Column>\r\n\r\n\r\n                        </Item>\r\n\r\n                    ))}\r\n                </Item.Group>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Grid} from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport PastSwapsList from \"./PastSwapsList\";\r\n/**\r\n * \r\n */\r\nexport default observer(function SwapHistoryDashboard() {\r\n    const { swapStore, userStore } = useStore()\r\n    const { loadHistory, loading, historyMap } = swapStore\r\n\r\n    useEffect(() => {\r\n        loadHistory(userStore.user!.id)\r\n    }, [loadHistory, userStore.user])\r\n\r\n\r\n    if (loading) return <LoadingComponent content=\"Loading history\" />\r\n    return (\r\n        <>\r\n            <Grid centered columns={1}>\r\n                <Grid.Column width={16}>\r\n                    {Array.from(historyMap.values()).length === 0 ? (\r\n                        <h3>No swaps made </h3>) : (\r\n                            <PastSwapsList/> )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CustomTextInput from \"../../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport * as Yup from 'yup';\r\nimport _ from 'lodash'\r\nimport { useState } from \"react\";\r\nimport { Button, Dropdown } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\n\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n    const { profileStore } = useStore();\r\n    const { profile, updateProfile } = profileStore\r\n    const [county, setCounty] = useState(\"\")\r\n  \r\n    const countyDefinitions = [\"Antrim\", \"Armagh\", \"Carlow\", \"Cavan\", \"Clare\", \"Cork\", \"Derry\", \"Donegal\", \"Down\", \"Dublin\",\r\n        \"Fermanagh\", \"Galway\", \"Kerry\", \"Kildare\", \"Kilkenny\", \"Laois\", \"Leitrim\", \"Limerick\", \"Longford\", \"Louth\", \"Mayo\", \"Meath\",\r\n        \"Monaghan\", \"Offaly\", \"Roscommon\", \"Sligo\", \"Tipperary\", \"Tyrone\", \"Waterford\", \"Westmeath\", \"Wexford\", \"Wicklow\",]\r\n\r\n    const countyOptions = _.map(countyDefinitions, (county, index) => ({\r\n        key: countyDefinitions[index],\r\n        text: county,\r\n        value: countyDefinitions[index],\r\n    }))\r\n\r\n    function handleDropDown(event:any, data:any) {\r\n        setCounty(data.value)\r\n    }\r\n\r\n    function handleUpdate(profile: Profile) {\r\n        profile.county = county\r\n        updateProfile(profile).then(() => {setEditMode(false)})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n            initialValues={{bio: profile!.bio, county: profile!.county, displayName: profile!.displayName, userName: profile!.userName }}\r\n            onSubmit={values => {\r\n                handleUpdate(values)\r\n            }}\r\n            validationSchema={Yup.object({\r\n                bio: Yup.string().required(),\r\n                county: Yup.string().required()\r\n            })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <CustomTextInput placeholder='Display Name' name='bio' />\r\n                        <Dropdown name='county' placeholder=\"County\" search selection options={countyOptions} onChange={handleDropDown} defaultValue={ profile!.county }/>\r\n                    <Button \r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileDetails() {\r\n    const { profileStore } = useStore()\r\n    const { profile, isCurrentUser } = profileStore\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    \r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\r\n                    \r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card, Grid, Image, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileBooksOwned() {\r\n    const { bookStore, profileStore } = useStore()\r\n    const { booksOwnedMap, deleteBook, loading } = bookStore\r\n    const { isCurrentUser } = profileStore\r\n    const [target, setTarget] = useState(\"\")\r\n\r\n    function handleBookDelete(event: SyntheticEvent<HTMLButtonElement>, id: string) {\r\n        setTarget(event.currentTarget.name)\r\n        deleteBook(id)\r\n    }\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid.Column width={16}>\r\n                <Card.Group itemsPerRow={4} >\r\n                    {Array.from(booksOwnedMap.values()).map(book => (\r\n                        <Card key={book.id} fluid >\r\n                            <Image src={book.image} style={{ height: \"275px\" }} />\r\n                            <Button.Group fluid widths={2}>\r\n                                {isCurrentUser ? (\r\n                                    <>\r\n                                        <Button\r\n                                            basic\r\n                                            color=\"blue\"\r\n                                            content=\"Details\"\r\n                                            as={Link} to={`/edit/${book.id}`}\r\n                                        />\r\n                                        <Button\r\n                                            basic\r\n                                            color=\"red\"\r\n                                            icon=\"trash\"\r\n                                            loading={target === book.id && loading}\r\n                                            onClick={event => handleBookDelete(event, book.id)}\r\n                                        />\r\n                                    </>\r\n\r\n                                ) : (\r\n                                    <Button\r\n                                        basic\r\n                                        color=\"blue\"\r\n                                        content=\"Details\"\r\n                                        as={Link} to={`/books/${book.id}`}\r\n                                    />\r\n                                )}\r\n\r\n                            </Button.Group>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n            </Grid.Column>\r\n        </Tab.Pane>\r\n    )\r\n})","// DOCS https://react-dropzone.js.org/\r\nimport React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void\r\n}\r\n/**\r\n * \r\n */\r\nexport default function Dropzone({ setFiles }: Props) {\r\n    const styles = {\r\n        border: \"dashed 3px #000000\",\r\n        borderColor: '#000000',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const activeStyle = {\r\n        borderColor: '#49a621'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...styles, ...activeStyle} : styles}>\r\n            <input {...getInputProps()} />\r\n            <Icon name='upload' size='huge' />\r\n            <Header as=\"h3\" content='Drag and drop image' />\r\n        </div>\r\n    )\r\n} ","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport Dropzone from \"./Dropzone\";\r\n\r\ninterface Props {\r\n    loading: boolean\r\n    uploadPhoto: (file: any) => void\r\n}\r\n/**\r\n * \r\n */\r\nexport default observer(function UploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([])\r\n\r\n    function upload() {\r\n        uploadPhoto(files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color=\"teal\" content=\"Add photo\" />\r\n                <Dropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header color=\"teal\" content=\"Preview & Uplaod\" />\r\n                {files && files.length > 0 && (\r\n                    <>\r\n                        <Image src={files[0].preview} />\r\n                        <Button loading={loading} onClick={upload} positive icon='check' />\r\n                        <Button disabled={loading} onClick={() => setFiles([]) } icon='close'/>\r\n                    </>\r\n                )}\r\n            </Grid.Column>\r\n          \r\n        </Grid>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport { Photo } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport UploadWidget from \"./Upload/UploadWidget\";\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfilePhotos() {\r\n    const { profileStore } = useStore()\r\n    const { profile, isCurrentUser, uploadPhoto, isUploading, isMainLoading, setMain, deletePhoto } = profileStore\r\n    const [photoMode, setPhotoMode] = useState(false)\r\n    const [target, setTarget] = useState(\"\")\r\n\r\n    function handleUpload(file: any) {\r\n        uploadPhoto(file).then(() => setPhotoMode(false))\r\n    }\r\n\r\n    function handleSetMain(e: SyntheticEvent<HTMLButtonElement>, photo: Photo) {\r\n        setTarget(e.currentTarget.name)\r\n        setMain(photo)\r\n    }\r\n\r\n    function handleDelete(e: SyntheticEvent<HTMLButtonElement>, photo: Photo) {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo)\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header\r\n                        floated=\"left\"\r\n                        content=\"Profile photos\"\r\n                        icon='image' />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated=\"right\"\r\n                            basic\r\n                            content={photoMode ? 'Cancel' : 'Add photo'}\r\n                            onClick={() => setPhotoMode(!photoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {photoMode\r\n                        ? (\r\n                            <UploadWidget uploadPhoto={handleUpload} loading={isUploading} />\r\n                        )\r\n                        : (\r\n                            <Card.Group itemsPerRow={5} >\r\n                                {profile?.photos?.map((photo: Photo) => (\r\n                                    <Card key={photo.id}>\r\n                                        <Image src={photo.url} />\r\n                                        {isCurrentUser && (\r\n                                            <Button.Group fluid widths={2}> \r\n                                                <Button\r\n                                                    basic\r\n                                                    color=\"green\"\r\n                                                    content=\"Main\"\r\n                                                    name={\"unique\" + photo.id}\r\n                                                    disabled={photo.isMain}\r\n                                                    onClick={event => handleSetMain(event, photo)}\r\n                                                    loading={target === \"unique\" + photo.id && isMainLoading}\r\n                                                />\r\n                                                <Button\r\n                                                    basic\r\n                                                    color=\"red\"\r\n                                                    icon=\"trash\"\r\n                                                    name={photo.id}\r\n                                                    loading={target === photo.id && isMainLoading}\r\n                                                    onClick={event => handleDelete(event, photo)}\r\n                                                    disabled={photo.isMain}\r\n                                                />\r\n                                            </Button.Group>\r\n                                        )}\r\n                                    </Card>\r\n                                ))}\r\n                            </Card.Group>\r\n                        )}\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\nimport ProfileOwnedBooks from \"./ProfileOwnedBooks\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileContent() {\r\n    const panes = [\r\n        { menuItem: 'Details', render: () => <ProfileDetails /> },\r\n        { menuItem: 'Books', render: () => <ProfileOwnedBooks/> },\r\n        { menuItem: 'Photos', render: () => <ProfilePhotos /> },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Tab\r\n                menu={{ fluid: true, vertical: true }}\r\n                menuPosition=\"right\"\r\n                panes={panes}\r\n            />\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Grid, Header, Icon, Item, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileHeader() {\r\n    const { bookStore, swapStore, profileStore } = useStore()\r\n    const { booksOwnedMap } = bookStore\r\n    const { historyMap } = swapStore\r\n    const { profile } = profileStore\r\n    return (\r\n        <>\r\n            <Segment>\r\n                <Grid columns={2} divided>\r\n\r\n                    <Grid.Column width={12}>\r\n                        <Item.Group>\r\n                            <Item>\r\n                                {profile?.image ? (<Item.Image\r\n                                    verticalAlign=\"middle\"\r\n                                    avatar\r\n                                    size=\"small\"\r\n                                    src={profile?.image}\r\n                                />) : (\r\n                                    <Icon name=\"user\" verticleAlign=\"middle\" size=\"huge\" />\r\n                                )}\r\n\r\n                                <Item.Content verticalAlign=\"middle\" >\r\n                                    <Header as=\"h2\" content={profile?.userName} />\r\n                                    <Grid.Column width={1} />\r\n                                    <Header as=\"h4\" content={profile?.county} />\r\n\r\n                                </Item.Content>\r\n                            </Item>\r\n                        </Item.Group>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Item style={{ marginTop: '45px', marginLeft: \"50px\" }}>\r\n                            <Item.Content verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">{Array.from(booksOwnedMap.values()).length} books owned </Header>\r\n                            </Item.Content>\r\n                            <Item style={{ marginTop: '10px' }}>\r\n                                <Item.Content verticalAlign=\"middle\">\r\n                                    <Header as=\"h3\">{historyMap.values.length} swaps made </Header>\r\n                                </Item.Content>\r\n                            </Item>\r\n                        </Item>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n/**\r\n * \r\n */\r\nexport default observer(function ProfileDashboard() {\r\n    const { username } = useParams<{ username: string }>()\r\n    const { profileStore, bookStore, userStore } = useStore();\r\n    const { loadOwnedBooks, loading } = bookStore\r\n    const { loadingProfile, loadProfile } = profileStore\r\n\r\n    useEffect(() => {\r\n        loadProfile(username)\r\n        loadOwnedBooks(userStore.user!.id)\r\n    }, [loadProfile, username, loadOwnedBooks, userStore.user])\r\n\r\n    if (loadingProfile || loading) return <LoadingComponent content=\"Loading profile\" />\r\n\r\n    return (\r\n        <>\r\n            <Grid>\r\n                <Grid.Column width={16}>                   \r\n                    <ProfileHeader/>\r\n                    <ProfileContent />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n})","import { Field, FieldProps, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Comment, Form, Header, Icon, Loader, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n// https://date-fns.org/ docs\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { Message } from \"../../../app/models/Message\";\r\n\r\ninterface Props {\r\n    swapId: string;\r\n}\r\n/**\r\n * \r\n */\r\nexport default observer(function SwapChat({ swapId }: Props) {\r\n    const { messageStore } = useStore()\r\n\r\n    useEffect(() => {\r\n        if (swapId) {\r\n            messageStore.createHubConnection(swapId);\r\n        }\r\n        return () => {\r\n            messageStore.removeMessages();\r\n        }\r\n    }, [messageStore, swapId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Segment textAlign=\"center\" attached=\"top\" color=\"teal\" style={{ border: \"none\" }}>\r\n                <Header>Message with member</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Comment.Group>\r\n                    {messageStore.messages.map((message: Message) => (\r\n                        <Comment key={message.id}>\r\n                            {message.image ? (\r\n                                <Comment.Avatar src={message.image} />) : (\r\n                                <Icon name=\"user\" />\r\n                            )}\r\n\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${message.userName}`}>\r\n                                    {message.displayName}\r\n                                </Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(message.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{message.text}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n\r\n                <Formik\r\n                    onSubmit={(values, { resetForm }) =>\r\n                        messageStore.addMessage(values).then(() => resetForm())}\r\n                    initialValues={{ text: '' }}\r\n                    validationSchema={Yup.object({\r\n                        text: Yup.string().required()\r\n                    })}>\r\n\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            \r\n                            <Field name='text'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n\r\n                </Formik>\r\n\r\n\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport SwapChat from \"./SwapChat\";\r\n/**\r\n * \r\n */\r\nexport default observer(function SwapHistoryDetails() {\r\n    const {swapStore } = useStore()\r\n    const { selectedSwap: swap, loadSwap, loadingInitial, clearSelectedSwap } = swapStore\r\n    const {swapId} = useParams<{swapId: string}>();\r\n\r\n    useEffect(() => {\r\n        if (swapId) loadSwap(swapId);\r\n        return () => clearSelectedSwap();\r\n    }, [swapId, loadSwap, clearSelectedSwap]);\r\n\r\n    if (loadingInitial || !swap) return <LoadingComponent />;\r\n\r\n    return (\r\n        <>\r\n            <h1>Chat about swap</h1>\r\n            <SwapChat swapId={swapId}/>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Component } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/Store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\n/**\r\n * Private route that checks if user is logged in if not routed back to homepage\r\n */\r\nexport default observer(function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const { userStore: { checkLogin } } = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => checkLogin ? (\r\n                <Component {...props} />) : (\r\n                <Redirect to='/' />)}\r\n        />\r\n    )\r\n\r\n})","import React, { useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport BookForm from '../../features/form/BookForm';\r\nimport BookDetails from '../../features/details/BookDetails';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport IsbnForm from '../../features/form/IsbnForm';\r\nimport { useStore } from '../stores/Store';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport LoginForm from '../../features/auth/LoginForm';\r\nimport RegisterForm from '../../features/auth/RegisterForm';\r\nimport MarketDashboard from '../../features/dashboards/market/MarketDashboard';\r\nimport SwapDashboard from '../../features/dashboards/swap/SwapDashboard';\r\nimport RequestorBookList from '../../features/dashboards/swap/RequestorBookList';\r\nimport SwapHistoryDashboard from '../../features/dashboards/history/SwapHistoryDashboard';\r\nimport ProfileDashboard from '../../features/dashboards/profile/ProfileDashboard';\r\nimport SwapHistoryDetails from '../../features/dashboards/history/SwapHistoryDetails';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n  const location = useLocation()\r\n  const { commonStore, userStore } = useStore()\r\n\r\n  // When logged in user receives JWT and the user is retrieved\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setApplicationLoaded(true))\r\n    } else {\r\n      commonStore.setApplicationLoaded(true)\r\n    }\r\n  }, [commonStore, userStore])\r\n\r\n  if (!commonStore.applicationLoaded) return <LoadingComponent content='loading application' />\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route exact path='/login' component={LoginForm} />\r\n      <Route exact path='/register' component={RegisterForm} />\r\n      <Route\r\n        path={['/books', '/books/:id', '/edit/:id', '/edit',\r\n          '/createBook', '/server-error', '/not-found',\r\n          '/swaps', '/requestor/:id', '/history',\r\n          '/profile/:username', '/history/:swapId']}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '10em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/books' component={MarketDashboard} />\r\n                <PrivateRoute path='/books/:id' component={BookDetails} />\r\n                <PrivateRoute key={location.key} path={['/edit/:id', '/edit',]} component={BookForm} />\r\n                <PrivateRoute path={'/createBook'} component={IsbnForm} />\r\n                <PrivateRoute path={'/profile/:username'} component={ProfileDashboard} />\r\n                <PrivateRoute path={'/requestor/:id'} component={RequestorBookList} />\r\n                <PrivateRoute path={'/swaps'} component={SwapDashboard} />\r\n                <PrivateRoute exact path={'/history'} component={SwapHistoryDashboard} />\r\n                <PrivateRoute path='/history/:swapId' component={SwapHistoryDetails} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport default observer(App);\r\n","import ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\nimport App from './app/layout/App'\r\nimport './app/layout/styles.css'\r\nimport { store, StoreContext } from './app/stores/Store';\r\nimport {createBrowserHistory} from 'history'\r\n/**\r\n * \r\n */\r\nexport const history = createBrowserHistory()\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}